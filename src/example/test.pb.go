// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package example is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	RequestLogon
	MsgTest2
*/
package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MSGID int32

const (
	MSGID_Logon_Request      MSGID = 0
	MSGID_CreateRoom_Request MSGID = 1
)

var MSGID_name = map[int32]string{
	0: "Logon_Request",
	1: "CreateRoom_Request",
}
var MSGID_value = map[string]int32{
	"Logon_Request":      0,
	"CreateRoom_Request": 1,
}

func (x MSGID) String() string {
	return proto.EnumName(MSGID_name, int32(x))
}
func (MSGID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RequestLogon struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id    int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *RequestLogon) Reset()                    { *m = RequestLogon{} }
func (m *RequestLogon) String() string            { return proto.CompactTextString(m) }
func (*RequestLogon) ProtoMessage()               {}
func (*RequestLogon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestLogon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestLogon) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RequestLogon) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type MsgTest2 struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id    int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *MsgTest2) Reset()                    { *m = MsgTest2{} }
func (m *MsgTest2) String() string            { return proto.CompactTextString(m) }
func (*MsgTest2) ProtoMessage()               {}
func (*MsgTest2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgTest2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgTest2) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgTest2) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestLogon)(nil), "example.RequestLogon")
	proto.RegisterType((*MsgTest2)(nil), "example.MsgTest2")
	proto.RegisterEnum("example.MSGID", MSGID_name, MSGID_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0x55,
	0xf2, 0xe0, 0xe2, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0xf1, 0xc9, 0x4f, 0xcf, 0xcf, 0x13,
	0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3,
	0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53,
	0x84, 0x44, 0xb8, 0x58, 0x53, 0x73, 0x13, 0x33, 0x73, 0x24, 0x98, 0xc1, 0x8a, 0x20, 0x1c, 0x25,
	0x17, 0x2e, 0x0e, 0xdf, 0xe2, 0xf4, 0x90, 0xd4, 0xe2, 0x12, 0x23, 0xf2, 0x4d, 0xd1, 0x32, 0xe2,
	0x62, 0xf5, 0x0d, 0x76, 0xf7, 0x74, 0x11, 0x12, 0xe4, 0xe2, 0x05, 0xbb, 0x28, 0x1e, 0xea, 0x3c,
	0x01, 0x06, 0x21, 0x31, 0x2e, 0x21, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0xa0, 0xfc, 0xfc, 0x5c,
	0xb8, 0x38, 0x63, 0x12, 0x1b, 0xd8, 0x4f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91, 0xe7,
	0xc5, 0xa7, 0xe1, 0x00, 0x00, 0x00,
}
